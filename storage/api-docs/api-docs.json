{
    "openapi": "3.0.0",
    "info": {
        "title": "IObenkyo api",
        "version": "1.0"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Allows to authenticate the user in the api",
                "operationId": "App\\Http\\Controllers\\AuthController::login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's account email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's account password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "User authenticated token",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "default": "Bearer"
                                        },
                                        "expires_at": {
                                            "type": "string",
                                            "default": "YYYY-MM-DD HH:mm:ss"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "If the user does not send the required params"
                    },
                    "401": {
                        "description": "If the email or password are wrong"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Allows to remoke the user token",
                "operationId": "App\\Http\\Controllers\\AuthController::logout",
                "responses": {
                    "401": {
                        "description": "It the user is no logged in"
                    },
                    "200": {
                        "description": "Success logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Successfully logout"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/accounting/bills": {
            "get": {
                "tags": [
                    "Accounting",
                    "Bills"
                ],
                "summary": "Lists user bills",
                "operationId": "App\\Http\\Controllers\\BillController::index",
                "responses": {
                    "200": {
                        "description": "User created bills",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Bill"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Accounting",
                    "Bills"
                ],
                "summary": "Allows to store a new bill",
                "operationId": "App\\Http\\Controllers\\BillController::store",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A title for the bill",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "apply_date",
                        "in": "query",
                        "description": "Date: YYYY-MM-DD HH:mm:ss",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "frequency",
                        "in": "query",
                        "description": "Id of the frequency applied to the bill",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "Value or price for the bill",
                        "required": true,
                        "schema": {
                            "type": "float"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If the bill was saved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bill"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/accounting/bills/{recordId}": {
            "delete": {
                "tags": [
                    "Accounting",
                    "Bills"
                ],
                "summary": "Allows to remove a bill",
                "operationId": "App\\Http\\Controllers\\BillController::destroy",
                "responses": {
                    "204": {
                        "description": "If the Bill was removed",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Accounting",
                    "Bills"
                ],
                "summary": "Allows to update a selected bill",
                "operationId": "App\\Http\\Controllers\\BillController::update",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A title for the bill",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "apply_date",
                        "in": "query",
                        "description": "Date: YYYY-MM-DD HH:mm:ss",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "frequency",
                        "in": "query",
                        "description": "Id of the frequency applied to the bill",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "Value or price for the bill",
                        "required": true,
                        "schema": {
                            "type": "float"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If the record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bill"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/settings/frequencies": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Lists all frequencies",
                "operationId": "App\\Http\\Controllers\\FrequencyController::index",
                "responses": {
                    "200": {
                        "description": "List of application frequencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Frequency"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "Allows to store a new frequency",
                "operationId": "App\\Http\\Controllers\\FrequencyController::store",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Days applied for the frequency",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_daily",
                        "in": "query",
                        "description": "If the frequency applies daily",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_weekly",
                        "in": "query",
                        "description": "If the frequency applies every week",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_monthly",
                        "in": "query",
                        "description": "If the frequency applies every month",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_every_year",
                        "in": "query",
                        "description": "If the frequency applies every year",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If the frequency was stored",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Frequency"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/settings/frequencies/{recordId}": {
            "delete": {
                "tags": [
                    "Settings"
                ],
                "summary": "Remove a frequency",
                "operationId": "App\\Http\\Controllers\\FrequencyController::destroy",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Settings"
                ],
                "summary": "Allows to update a frequency",
                "operationId": "App\\Http\\Controllers\\FrequencyController::update",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Days applied for the frequency",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_daily",
                        "in": "query",
                        "description": "If the frequency applies daily",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_weekly",
                        "in": "query",
                        "description": "If the frequency applies every week",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_monthly",
                        "in": "query",
                        "description": "If the frequency applies every month",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_every_year",
                        "in": "query",
                        "description": "If the frequency applies every year",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the updated frequency",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Frequency"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/habits/categories": {
            "get": {
                "tags": [
                    "Habits"
                ],
                "summary": "Allows to list habit categories",
                "operationId": "App\\Http\\Controllers\\HabitCategoryController::index",
                "responses": {
                    "200": {
                        "description": "Categories list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/HabitCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Habits"
                ],
                "summary": "Allows to save a new habit category",
                "operationId": "App\\Http\\Controllers\\HabitCategoryController::store",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name assigned to the category",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "icon",
                        "in": "query",
                        "description": "Icon to be assinged to the category, see: https://fontawesome.com/icons?d=gallery",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Saved category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HabitCategory"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Habits"
                ],
                "summary": "Allows to remove a category",
                "operationId": "App\\Http\\Controllers\\HabitCategoryController::destroy",
                "responses": {
                    "204": {
                        "description": "If the category was removed successfuly",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Habits"
                ],
                "summary": "Allows to update a habit category",
                "operationId": "App\\Http\\Controllers\\HabitCategoryController::update",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name assigned to the category",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "icon",
                        "in": "query",
                        "description": "Icon to be assinged to the category, see: https://fontawesome.com/icons?d=gallery",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If the category was updated successfuly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HabitCategory"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/habits": {
            "get": {
                "tags": [
                    "Habits"
                ],
                "summary": "List of habits",
                "operationId": "App\\Http\\Controllers\\HabitController::index",
                "responses": {
                    "200": {
                        "description": "List of habits",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Habit"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Habits"
                ],
                "summary": "Allows to store a new habit",
                "operationId": "App\\Http\\Controllers\\HabitController::store",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "A title to identify the habit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Additional information for the habit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_counter",
                        "in": "query",
                        "description": "If the habit is complete by counting",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "counter_goal",
                        "in": "query",
                        "description": "Amount required to complete the habit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Date when the habit should be start getting tracked (YYYY-MM-DD HH:mm:ss)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "should_keep",
                        "in": "query",
                        "description": "If the habit its something that benefits the user",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "should_avoid",
                        "in": "query",
                        "description": "If the habit its something that harms the user",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "goal_date",
                        "in": "query",
                        "description": "Date when the habit should be completed (YYYY-MM-DD HH:mm:ss)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "streak_goal",
                        "in": "query",
                        "description": "What is the goal for the habit",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The stored category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Habit"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Habits"
                ],
                "summary": "Allows to remove a habit",
                "operationId": "App\\Http\\Controllers\\HabitController::destroy",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Habits"
                ],
                "summary": "Allows to update a habit",
                "operationId": "App\\Http\\Controllers\\HabitController::update",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "A title to identify the habit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Additional information for the habit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_counter",
                        "in": "query",
                        "description": "If the habit is complete by counting",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "counter_goal",
                        "in": "query",
                        "description": "Amount required to complete the habit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Date when the habit should be start getting tracked (YYYY-MM-DD HH:mm:ss)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "should_keep",
                        "in": "query",
                        "description": "If the habit its something that benefits the user",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "should_avoid",
                        "in": "query",
                        "description": "If the habit its something that harms the user",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "goal_date",
                        "in": "query",
                        "description": "Date when the habit should be completed (YYYY-MM-DD HH:mm:ss)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "streak_goal",
                        "in": "query",
                        "description": "What is the goal for the habit",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The stored category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Habit"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/habits/follow-up/{habitId}": {
            "get": {
                "tags": [
                    "Habits follow up"
                ],
                "summary": "Lists all follow ups on a habit",
                "operationId": "App\\Http\\Controllers\\HabitFollowUpController::followUpList",
                "responses": {
                    "200": {
                        "description": "List of follow ups",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/HabitFollowUp"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Habits follow up"
                ],
                "summary": "Allows to mark a follow up for the given day",
                "operationId": "App\\Http\\Controllers\\HabitFollowUpController::followUpMark",
                "parameters": [
                    {
                        "name": "apply_date",
                        "in": "query",
                        "description": "Date to mark the habit as followed (YYYY-MM-DD)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "story",
                        "in": "query",
                        "description": "A short description about the habit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "counter",
                        "in": "query",
                        "description": "A value to mark the times completed an habit",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "remove",
                        "in": "query",
                        "description": "If the follow up should be removed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "update",
                        "in": "query",
                        "description": "If the follow up should be updated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "accomplished",
                        "in": "query",
                        "description": "If the follow up should be mark as completed",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated or saved follow up",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HabitFollowUp"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/habits/daily-follow-up/{dateStr}": {
            "get": {
                "tags": [
                    "Habits follow up"
                ],
                "summary": "Lists the habits for a given day",
                "operationId": "App\\Http\\Controllers\\HabitFollowUpController::dailyFollowUp",
                "parameters": [
                    {
                        "name": "dateStr",
                        "in": "path",
                        "description": "The day to search for follow ups",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Follow ups for given name",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/HabitFollowUp"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Allows to register a user",
                "operationId": "App\\Http\\Controllers\\RegisterController::create",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User personal name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User email (user name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User account password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If the user was created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Bill": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "apply_date": {
                        "description": "Date or day of month which the bill apply",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    },
                    "custom_days": {
                        "description": "Days for the applied frequency",
                        "type": "string",
                        "default": "mon,tue,wed,thu,fri,sat,sun,*"
                    },
                    "description": {
                        "description": "A description for the bill",
                        "type": "string"
                    },
                    "is_open": {
                        "description": "If the system should keep generating this bill",
                        "type": "boolean"
                    },
                    "frequency": {
                        "$ref": "#/components/schemas/Frequency"
                    },
                    "name": {
                        "description": "A simple title for the bill",
                        "type": "string"
                    },
                    "value": {
                        "description": "Value/price, for the bill",
                        "type": "number",
                        "default": "0"
                    },
                    "created_at": {
                        "description": "Created date",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    },
                    "updated_at": {
                        "description": "Updated date",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    }
                },
                "type": "object"
            },
            "Frequency": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "days": {
                        "description": "Amount of days for the frequency",
                        "type": "integer"
                    },
                    "is_daily": {
                        "description": "If apply daily",
                        "type": "boolean"
                    },
                    "is_weekly": {
                        "description": "If apply weekly",
                        "type": "boolean"
                    },
                    "is_monthly": {
                        "description": "If apply monthly",
                        "type": "boolean"
                    },
                    "is_every_year": {
                        "description": "If apply every year",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Created date",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    },
                    "updated_at": {
                        "description": "Updated date",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    }
                },
                "type": "object"
            },
            "Habit": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "start": {
                        "description": "Date where the habit should start",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    },
                    "goal_date": {
                        "description": "",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    },
                    "streak_count": {
                        "description": "Current streak count",
                        "type": "integer"
                    },
                    "streak_goal": {
                        "description": "Amount to be used as goal",
                        "type": "integer"
                    },
                    "category": {
                        "$ref": "#/components/schemas/HabitCategory"
                    },
                    "is_counter": {
                        "description": "If the habit should be accomplished by completing an amount of times",
                        "type": "boolean"
                    },
                    "counter_goal": {
                        "description": "Amount of times to complete the goal a single day",
                        "type": "integer"
                    },
                    "max_streak": {
                        "description": "The user max streak in a row",
                        "type": "integer"
                    },
                    "should_keep": {
                        "description": "If the habit its something that benefits the user",
                        "type": "boolean"
                    },
                    "should_avoid": {
                        "description": "If the habit its something that demages the user",
                        "type": "boolean"
                    },
                    "followUps": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HabitFollowUp"
                        }
                    },
                    "created_at": {
                        "description": "Created date",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    },
                    "updated_at": {
                        "description": "Updated date",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    }
                },
                "type": "object"
            },
            "HabitCategory": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "icon": {
                        "description": "",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Created date",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    },
                    "updated_at": {
                        "description": "Updated date",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    }
                },
                "type": "object"
            },
            "HabitFollowUp": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "apply_date": {
                        "description": "",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    },
                    "story": {
                        "description": "A description of what happened while accomplishing this habit",
                        "type": "string"
                    },
                    "accomplished": {
                        "description": "",
                        "type": "boolean"
                    },
                    "counter": {
                        "description": "Times completed by the user",
                        "type": "integer"
                    },
                    "counter_goal": {
                        "description": "Times to mark the goal as accomplished",
                        "type": "integer"
                    },
                    "is_counter": {
                        "description": "If the follow up is completed by counting",
                        "type": "boolean"
                    },
                    "habit": {
                        "$ref": "#/components/schemas/Habit"
                    },
                    "created_at": {
                        "description": "Created date",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    },
                    "updated_at": {
                        "description": "Updated date",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "description": "Transform the resource into an array.",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Transform the resource into an array.",
                        "type": "string"
                    },
                    "email": {
                        "description": "Transform the resource into an array.",
                        "type": "string"
                    },
                    "email_verified_at": {
                        "description": "Transform the resource into an array.",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    },
                    "created_at": {
                        "description": "Transform the resource into an array.",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    },
                    "updated_at": {
                        "description": "Transform the resource into an array.",
                        "type": "string",
                        "default": "YYYY-MM-DD HH:mm:ss"
                    }
                },
                "type": "object"
            }
        }
    },
    "security": [
        []
    ]
}